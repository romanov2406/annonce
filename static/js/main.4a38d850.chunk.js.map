{"version":3,"sources":["utils.js","components/Announcements/announcements.js","components/Announcement-Item/announcement-Item.js","components/Announcement-details/announcement-details.js","App.js","reportWebVitals.js","index.js"],"names":["formatDate","d","time","getHours","getMinutes","date","getDate","getMonth","getFullYear","limitText","string","limit","length","substring","Announcements","props","handleChange","event","setState","filter","target","value","state","announcements","announcement","this","a","id","remove","filteredData","item","title","toLowerCase","includes","className","onClick","history","push","onChange","placeholder","ListGroup","map","index","Item","to","role","description","src","alt","width","Component","AnnouncementItem","handleInputChange","notify","toast","error","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","match","params","isNew","add","find","console","log","Date","getTime","update","e","preventDefault","createAnnouncement","updateAnnouncement","onSubmit","submit","htmlFor","type","cols","rows","goBack","AnnouncementDetails","similar","findSimilarAnnouncements","splice","findBy","Set","split","prop","an","indexOf","App","localStorage","getItem","JSON","parse","setItem","stringify","save","Object","assign","path","render","from","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4a38d850.chunk.js","sourcesContent":["export function formatDate(d) {\n  const time = `${d.getHours() < 10 ? '0' : ''}${d.getHours()}:${d.getMinutes() < 10 ? '0' : ''}${d.getMinutes()}`;\n  const date = `${d.getDate()}/${d.getMonth() + 1}/${d.getFullYear()}`;\n\n  return `${time} | ${date}`;\n}\n\nexport function limitText(string, limit) {\n  if (string.length > limit) {\n    string = string.substring(0, limit) + '...';\n  }\n\n  return string;\n}\n","import React, { Component, Fragment } from 'react';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport { Link } from 'react-router-dom';\nimport { limitText } from '../../utils';\n\nclass Announcements extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {filter:'', announcements: props.announcements };\n  }\n\n  remove(announcement) {\n    this.setState({\n      announcements: this.state.announcements.filter(a => a.id !== announcement.id)\n    });\n\n    this.props.remove(announcement);\n  }\n\n  handleChange = event => {\n    this.setState({ filter: event.target.value });\n  };\n\n  render() {\n    const { filter, announcements } = this.state;\n    const filteredData = announcements.filter(item => item.title.toLowerCase().includes(filter.toLowerCase()));\n\n    return (\n      <Fragment>\n        <button className=\"btn btn-primary new\" onClick={ () => this.props.history.push('/announcements/new') }>Add New\n          Announcement\n        </button>\n        <div className=\"row\">\n          <div className=\"col-4\">\n            <input className=\"form-control search\" value={filter} onChange={this.handleChange} placeholder=\"search\" />\n          </div>\n        </div>\n        <ListGroup>\n          {\n            filteredData.length ?\n            filteredData.map((announcement, index) => (\n                <ListGroup.Item key={ index }>\n                  <div className='announcement-item'>\n                    <div className=\"info\">\n                      <Link to={`/announcements-details/${announcement.id}`} >\n                        <h4>{ announcement.title }</h4>\n                      </Link>\n                      <div className=\"alert alert-light\" role=\"alert\">\n                        <p>{ limitText(announcement.description, 250) }</p>\n                      </div>\n                      <span className=\"badge badge-light\">{ announcement.date }</span>\n                    </div>\n                    <div className=\"actions\">\n                      <img src={ 'icons/trash.svg' } alt='trash' onClick={ () => this.remove(announcement) }/>\n                      <img src={ 'icons/pencil.svg' } alt='pencil'\n                           onClick={ () => this.props.history.push(`/announcements/${ announcement.id }`) }/>\n                    </div>\n                  </div>\n                </ListGroup.Item>\n              )) : <div className=\"d-flex justify-content-center\"><img src=\"empty.png\" width=\"400px\" alt=\"empty\"/></div>\n          }\n        </ListGroup>\n      </Fragment>\n    );\n  }\n\n}\n\nexport default Announcements;\n","import React, { Component } from 'react';\nimport { toast, ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { formatDate } from '../../utils';\n\nclass AnnouncementItem extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      title: '',\n      description: '',\n      announcement: null,\n      announcements: props.announcements,\n      id: +props.match.params.id,\n      isNew: !!props.add\n    };\n  }\n\n  componentDidMount() {\n    if (this.state.id != null && !this.state.isNew) {\n      const announcement = this.state.announcements.find(a => a.id === this.state.id);\n\n      this.setState({\n        title: announcement.title,\n        description: announcement.description,\n        announcement\n      }, () => console.log(this.state));\n    }\n  }\n\n  createAnnouncement() {\n    const { title, description } = this.state;\n\n    if (!title || !description) {\n      this.notify();\n      return false;\n    }\n\n    const announcement = {\n      id: new Date().getTime(),\n      title: this.state.title,\n      description: this.state.description,\n      date: formatDate(new Date()),\n    };\n\n    this.props.add(announcement);\n    this.props.history.push('/announcements');\n  }\n\n  updateAnnouncement() {\n    const { title, description } = this.state;\n    const { id } = this.state.announcement;\n\n    this.props.update({ id, title, description });\n    this.props.history.push('/announcements');\n  }\n\n  submit(e) {\n    e.preventDefault();\n    this.state.isNew ? this.createAnnouncement() : this.updateAnnouncement();\n  }\n\n  handleInputChange = (state) => {\n    this.setState({ ...state });\n  };\n\n  notify = () => {\n    return toast.error('Please fill out all fields', {\n      position: 'top-right',\n      autoClose: 3000,\n      hideProgressBar: true,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n    });\n  };\n\n  render() {\n    return (\n      <section>\n        <h2>New Announcement</h2>\n        <form onSubmit={(e) => this.submit(e)}>\n          <div className=\"form-group\">\n            <label htmlFor=\"title\">Announcement Title</label>\n            <input type=\"text\"\n                   id=\"title\"\n                   className=\"form-control\"\n                   value={this.state.title}\n                   onChange={(event) => this.handleInputChange({ title: event.target.value })}\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"description\">Announcement Description</label>\n            <textarea id=\"description\"\n                      className=\"form-control\"\n                      cols=\"30\"\n                      rows=\"10\"\n                      value={this.state.description}\n                      onChange={(event) => this.handleInputChange({ description: event.target.value })}>\n            </textarea>\n          </div>\n          <div className=\"buttons\">\n            <button type=\"submit\" className=\"btn btn-primary\">{ this.state.isNew ? 'Create Announcement' : 'Update Announcement'}</button>\n            <button type=\"button\" className=\"btn btn-secondary\" onClick={() => this.props.history.goBack()}>Back</button>\n          </div>\n        </form>\n        <ToastContainer />\n      </section>\n    );\n  }\n}\n\nexport default AnnouncementItem;\n","import React, { Component } from 'react';\nimport { limitText } from '../../utils';\n\nclass AnnouncementDetails extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      announcements: props.announcements,\n      id: +props.match.params.id,\n      announcement: null\n    }\n  }\n\n  componentDidMount() {\n    const announcement = this.state.announcements.find(a => a.id === this.state.id);\n    this.setState({\n      announcement\n    }, () => {\n      this.setState({\n        similar: [\n          ...this.findSimilarAnnouncements('title'),\n          // ...this.findSimilarAnnouncements('description')\n        ].splice(0, 3)\n      })\n    });\n  }\n\n  findSimilarAnnouncements(findBy) {\n    if (!this.state.announcement) return;\n    const similar = new Set();\n\n    for (const prop of this.state.announcement[findBy].split(' ')) {\n      for (const an of this.state.announcements) {\n        if (an[findBy].indexOf(prop) !== -1 && an.id !== this.state.announcement.id) {\n          similar.add(an);\n        }\n      }\n    }\n\n    return similar;\n  }\n\n  render() {\n    return (\n      this.state.announcement &&\n      <section>\n        <h2>{ this.state.announcement.title }</h2>\n        <p>{ this.state.announcement.description }</p>\n        <span className=\"badge badge-light\">{ this.state.announcement.date }</span>\n        <div className='mt-2'>\n          <button type=\"button\" className=\"btn btn-secondary\" onClick={() => this.props.history.goBack()}>Back</button>\n        </div>\n\n        <hr/>\n\n        <div className=\"similar-announcements\">\n          {\n            this.state.similar && this.state.similar.length\n              ? this.state.similar.map((a, index) => (\n                <div className=\"card\" key={index}>\n                  <div className=\"card-body\">\n                    <h5 className=\"card-title\">{ a.title }</h5>\n                    <h6 className=\"card-subtitle mb-2 text-muted\">{ a.date }</h6>\n                    <p className=\"card-text\">{limitText(a.description, 150)}</p>\n                  </div>\n                </div>\n              )) : <div className=\"alert alert-primary\">No similar announcements</div>\n          }\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default AnnouncementDetails;\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Redirect, Route, Switch } from 'react-router-dom';\nimport Announcements from './components/Announcements/announcements';\nimport AnnouncementItem from './components/Announcement-Item/announcement-Item';\nimport AnnouncementDetails from './components/Announcement-details/announcement-details';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './styles/index.scss';\n\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n\n    const announcements = localStorage.getItem('announcements');\n\n    this.state = {\n      announcements: announcements ? JSON.parse(announcements) : []\n    };\n  }\n\n  save() {\n    localStorage.setItem('announcements', JSON.stringify(this.state.announcements));\n  }\n\n  add(announcement) {\n    this.setState({\n      announcements: [...this.state.announcements, announcement]\n    }, this.save);\n  }\n\n  update(announcement) {\n    const { title, description } = announcement;\n\n    const announcements = this.state.announcements.map(a => {\n      if (a.id === announcement.id) {\n        return Object.assign({}, a, { title, description })\n      }\n\n      return a;\n    });\n\n    this.setState({ announcements }, this.save);\n  }\n\n  remove(announcement) {\n    this.setState({\n      announcements: this.state.announcements.filter(a => a.id !== announcement.id)\n    }, this.save);\n  }\n\n  render() {\n    return (\n      <div className='container'>\n        <Router>\n          <Switch>\n            <Route path=\"/announcements/new\"\n                   render={ (props) => (\n                     <AnnouncementItem { ...props } add={ (a) => this.add(a) }/>)\n                   }/>\n            <Route path=\"/announcements/:id\"\n                   render={ (props) => (\n                     <AnnouncementItem { ...props } announcements={ this.state.announcements } update={ (a) => this.update(a) }/>\n                   ) }/>\n            <Route path=\"/announcements\"\n                   render={ (props) => (\n                     <Announcements { ...props } announcements={ this.state.announcements } remove={ (a) => this.remove(a) }/>\n                   ) }/>\n            <Route path=\"/announcements-details/:id\"\n                   render={ (props) => (\n                     <AnnouncementDetails { ...props } announcements={ this.state.announcements } />)\n                   }/>\n            <Redirect from=\"/\" to=\"/announcements\"/>\n          </Switch>\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}